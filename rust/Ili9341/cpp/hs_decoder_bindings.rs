/* automatically generated by rust-bindgen 0.59.2 */

pub type __uint8_t = cty::c_uchar;
pub type __uint16_t = cty::c_ushort;
pub type size_t = cty::c_ulong;
#[repr(i32)]
pub enum HSD_sink_res {
    HSDR_SINK_OK = 0,
    HSDR_SINK_FULL = 1,
    HSDR_SINK_ERROR_NULL = -1,
}
#[repr(i32)]
pub enum HSD_poll_res {
    HSDR_POLL_EMPTY = 0,
    HSDR_POLL_MORE = 1,
    HSDR_POLL_ERROR_NULL = -1,
    HSDR_POLL_ERROR_UNKNOWN = -2,
}
#[repr(i32)]
pub enum HSD_finish_res {
    HSDR_FINISH_DONE = 0,
    HSDR_FINISH_MORE = 1,
    HSDR_FINISH_ERROR_NULL = -1,
}
#[repr(C)]
pub struct heatshrink_decoder {
    pub input_size: u16,
    pub input_index: u16,
    pub output_count: u16,
    pub output_index: u16,
    pub head_index: u16,
    pub state: u8,
    pub current_byte: u8,
    pub bit_index: u8,
    pub buffers: [u8; 288usize],
}
extern "C" {
    #[link_name = "\u{1}_Z24heatshrink_decoder_resetP18heatshrink_decoder"]
    pub fn heatshrink_decoder_reset(hsd: *mut heatshrink_decoder);
}
extern "C" {
    #[link_name = "\u{1}_Z23heatshrink_decoder_sinkP18heatshrink_decoderPhmPm"]
    pub fn heatshrink_decoder_sink(
        hsd: *mut heatshrink_decoder,
        in_buf: *mut u8,
        size: size_t,
        input_size: *mut size_t,
    ) -> HSD_sink_res;
}
extern "C" {
    #[link_name = "\u{1}_Z23heatshrink_decoder_pollP18heatshrink_decoderPhmPm"]
    pub fn heatshrink_decoder_poll(
        hsd: *mut heatshrink_decoder,
        out_buf: *mut u8,
        out_buf_size: size_t,
        output_size: *mut size_t,
    ) -> HSD_poll_res;
}
extern "C" {
    #[link_name = "\u{1}_Z25heatshrink_decoder_finishP18heatshrink_decoder"]
    pub fn heatshrink_decoder_finish(hsd: *mut heatshrink_decoder) -> HSD_finish_res;
}
